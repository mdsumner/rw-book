# Grids, coordinates, and geospatial conventions {.unnumbered}

Some grids are not actually rectilinear or curvilinear

- a grid can present as rectilinear because of numeric precision 
- a grid can present as curvilinear because of explicit storage of longlat arrays when the data was projected


I think that this leads to a family of cases that are all valid and desirable, but currently quite complicated to separate and access intentionally for various reasons atm. 


-(A) a non-georeferenced array   
-(B) a georeferenced array in standard geospatial affine (either corner-aligned bbox, or actual offset/scale/shear)
-(C) a degenerate rectilinear form of (B), we store xs and ys explicitly as centre-coords (but they are a monotonic regular-increasing sequence (or decreasing, still equivalent))
-(D) a degenerate rectilinear form of (B), but untransformed from native projected to longitude and latitude (i.e. old Aviso Mercator stored in longlat rectilinear netcdf)
-(E) a degenerate curvilinear form of (B), we store every longitude and latitude untransformed from the projected transform
-(F) a degenerate curvilinear form of (C), we store every native X and Y from the projected transform (this never happens, though native longlat stored this way is not out of the question, equivalent but less compact than (C))
-(G) truly actual rectilinear (but note cases of (D))
-(H) truly actual curvilinear (but note cases of (E))



## How does software see this world

The xarray model. Everything is stored in rectilinear or curvilinear form explicitly. 

The GDAL model. If it's georeferenced it's B. If not georeferenced (or georferenced but still has coord arrays): 

- non-georeferenced, positioned in affine transform with 1,0 values ( so upside down to normal)
- actual rectilinear, either cleanly converted to B, or with a B-interpretation (for RasterIO) and coord arrays available (for Warp), this covers D as well because we can't tell
- actual curvilinear, every coordinate stored (very very usually longlat), covers also E because we can't tell
- 

All of these cases are subject to interpretation. We can assign a transform (or extent), we can assign rectilinear or curvlinear coords, we can assign GCPs, RPCs. With a coordinate model assigned, the trivial case is ready to go for RasteIO or warp, with other cases we can RasterIO but the geolcation model will be copied along. With Warp, we will resolve to a regular longlat grid (Atlantic or Pacific as per extent), or to any grid we choose. 

